#! /usr/bin/python3

from more_itertools import sliced
import pywikibot
import pywikibot.pagegenerators as pg
import mwparserfromhell
import re

from usage_bot.instantcommons import from_instantcommons
from usage_bot.osm import from_taginfo, from_overpass

def usage_bot():
    #update_galleries(from_taginfo(), "User:Usage Bot/Used on OSM")
    #update_galleries(from_instantcommons(pywikibot.Site("wikitech:en")),
    #                 "User:Usage Bot/Used on wikitech")
    print(get_existing_galleries("User:Usage Bot/Used on OSM"))
    print(get_existing_galleries("User:Usage Bot/Used on wikitech"))

def get_existing_galleries(base_gallery):
    gen = pg.PrefixingPageGenerator(f"{base_gallery}/", content=True)
    gen = pg.RegexFilterPageGenerator(gen, fr"^{re.escape(base_gallery)}/\d+",
                                      ignore_namespace=False)
    gallery_files = { }
    for p in gen:
        files = set()
        tree = mwparserfromhell.parse(p.text)
        for gall in [tag for tag in tree.filter_tags()
                     if tag.tag == "gallery"]:
            # I don't think mwparserfromhell understands the contents
            # of <gallery>, so we have to parse it ourselves.
            for line in gall.contents.splitlines():
                files.add(line.split('|', 1)[0].strip())
        files.discard('') # Blank lines in galleries are ignored
        gallery_files[int(p.title().split('/')[-1])] = files
    return gallery_files

def update_galleries(files, base_gallery):
    site = pywikibot.Site()
    gallery_number = 1
    for i, chunk in enumerate(sliced(sorted(files.items()), 1000),
                              start = gallery_number):
        gallery = pywikibot.Page(site, f"{base_gallery}/{i}")
        gallery.text = ("{{../header}}\n<gallery>\n" +
                        "".join([f"{filename}|{caption}\n"
                                 for filename, caption in chunk]) +
                        "</gallery>\n")
        if i == 1:
            with open(base_gallery, 'w') as f:
                print(gallery.text, end='', file=f)
        gallery.save("Files currently in use by OSM")

def main(*args):
    # Process global arguments to determine desired site
    local_args = pywikibot.handle_args(args)

    usage_bot()

main()
